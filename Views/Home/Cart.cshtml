@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{ }
@model IEnumerable<VPWebSolutions.Data.Entities.OrderItem>
@using VPWebSolutions.Logic
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
<h1>YOUR CART</h1>
@if (CartActions.listItems.Count <= 0)
{
<p class="p-button">Your cart is currently empty, but your stomach doesn't have to be. Add some items and come back here to checkout.</p>
                @using (Html.BeginForm("Menu", "Home", FormMethod.Get))
                {
<button class="btn btn-primary" type="submit">START ORDER</button>} }
                            else
                            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.MenuItem.ImageId)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.MenuItem.Name)
                            </th>
                            <th>
                                <p>Size</p>
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Quantity)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.MenuItem.Price)
                            </th>

                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in CartActions.listItems)
                        {
        <tr>
            <td>
                <img src="~/images/@(item.MenuItem.ImageId).jpg" class="menuImg" height="100" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MenuItem.Name)
            </td>
            <td>
                @if (item.MenuItem.Type == VPWebSolutions.Data.Entities.MenuItemType.Pizza)
                {
                    VPWebSolutions.Data.Entities.Pizza pizza = (VPWebSolutions.Data.Entities.Pizza)item.MenuItem;
<p>@pizza.Size</p> } @*@Html.DisplayFor(modelItem => item.MenuItem)*@
            </td>
            <td>
                <button class="btn btn-primary" type="submit">-</button>
                @Html.DisplayFor(modelItem => item.Quantity)
                <button class="btn btn-primary" type="submit">+</button>
            </td>
            <td>
                <p>$@((item.MenuItem.Price*item.Quantity))</p>
            </td>
            <td>
                @using (Html.BeginForm("CartRemove", "Home", new { ItemId = item.MenuItem.Id }, FormMethod.Post))
                {
<button class="btn btn-primary" type="submit">Remove</button>}
            </td>
        </tr>}
                    </tbody>
                </table>

                                @if (SignInManager.IsSignedIn(User) && (UserManager.GetRolesAsync(UserManager.GetUserAsync(User).Result).Result.Contains("Employee") || UserManager.GetRolesAsync(UserManager.GetUserAsync(User).Result).Result.Contains("Manager")))
                                {
                @using (Html.BeginForm("Order", "Home", FormMethod.Get))
                {
<button class="btn btn-primary" type="submit">Place Order</button>} }
                                else
                                {
                @using (Html.BeginForm("CheckoutPage", "Home", FormMethod.Get))
                {
<button class="btn btn-primary" type="submit">Checkout</button>}}}

<style>
    .p-button, h1, th, td {
        color: #DEC20B;
        font-weight: bold;
    }
</style>