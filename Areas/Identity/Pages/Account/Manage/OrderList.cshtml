@page
@model OrderModel
@{
    ViewData["Title"] = "Orders";
}
<script type="text/javascript">
    function filterFunction(dropdown) {
        var selected = dropdown.options[dropdown.selectedIndex].value
        var table = document.getElementsByClassName("table");
        var tr = table[0].getElementsByTagName("tr");

        if (selected == "all") {
            for (i = 0; i < tr.length; i++) {
                tr[i].style.display = "";
            }
            return;
        }
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[3];
            if (td) {
                txtValue = td.textContent || td.innerText;
                var status = txtValue.trim();

                if (selected == "current") {
                    if (status != "DELIVERED") {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
                else if (selected == "previous") {
                    if (status == "DELIVERED") {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }
    }
</script>
<h1>Orders</h1>
@if (Model.Orders.Count() == 0)
{
    <p class="p-button">You currently have no orders on this account. Make an order so you can view it here.</p>
    @using (Html.BeginForm("Menu", "Home", FormMethod.Get))
    {
        <button class="btn btn-primary" type="submit">START ORDER</button>
    }
}
else
{
    <select id="mySelect" onchange="filterFunction(this)">
        <option value="all">All Orders</option>
        <option value="current">Current</option>
        <option value="previous">Previous</option>
    </select>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Orders[0].OrderDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Orders[0].Items)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Orders[0].OrderTotal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Orders[0].Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Orders[0].OrderAddress)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Orders)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderDate)
                    </td>
                    <td>
                        <ul>
                            @foreach (var oi in item.Items)
                            {
                                <li>
                                    @oi.Quantity @oi.MenuItem.Name
                                </li>
                            }
                        </ul>
                    </td>
                    <td>
                        @item.OrderTotal.ToString("c")
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderAddress)
                    </td>
                    <td>
                        @Html.ActionLink("Details", "OrderDetails", new { id = item.Id }, new { @class = "btn btn-primary" })
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

